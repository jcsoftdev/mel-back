generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String                   @id @default(uuid())
  name                String
  email               String                   @unique
  password            String
  createdAt           DateTime                 @default(now())
  documentPermissions UserDocumentPermission[]
  roles               UserPermission[]
}

model Role {
  id                  String                   @id @default(uuid())
  name                String                   @unique
  createdAt           DateTime                 @default(now())
  documentPermissions UserDocumentPermission[]
  userPermissions     UserPermission[]
}

model Section {
  id          String           @id @default(uuid())
  name        String
  createdAt   DateTime         @default(now())
  parentId    String?
  documents   Document[]
  parent      Section?         @relation("SectionChildren", fields: [parentId], references: [id], onDelete: Cascade)
  children    Section[]        @relation("SectionChildren")
  permissions UserPermission[]

  @@unique([parentId, name])
  @@index([parentId])
  @@index([name])
}

model Document {
  id              String                   @id @default(uuid())
  title           String
  url             String
  sectionId       String
  createdAt       DateTime                 @default(now())
  section         Section                  @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  userPermissions UserDocumentPermission[]

  @@index([sectionId])
}

model UserPermission {
  id        String  @id @default(uuid())
  userId    String
  sectionId String
  roleId    String
  role      Role    @relation(fields: [roleId], references: [id], onDelete: Cascade)
  section   Section @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, sectionId])
  @@index([sectionId])
  @@index([userId])
  @@index([roleId])
}

model UserDocumentPermission {
  id         String   @id @default(uuid())
  userId     String
  documentId String
  roleId     String
  document   Document @relation(fields: [documentId], references: [id], onDelete: Cascade)
  role       Role     @relation(fields: [roleId], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, documentId])
  @@index([documentId])
  @@index([userId])
  @@index([roleId])
}
